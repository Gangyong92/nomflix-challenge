[{"/mnt/d/github/nomflix/src/index.js":"1","/mnt/d/github/nomflix/src/Components/App.js":"2","/mnt/d/github/nomflix/src/Components/Router.js":"3","/mnt/d/github/nomflix/src/Components/Header.js":"4","/mnt/d/github/nomflix/src/Components/GlobalStyles.js":"5","/mnt/d/github/nomflix/src/api.js":"6","/mnt/d/github/nomflix/src/Routes/Home/index.js":"7","/mnt/d/github/nomflix/src/Routes/Home/HomeContainer.js":"8","/mnt/d/github/nomflix/src/Routes/Home/HomePresenter.js":"9","/mnt/d/github/nomflix/src/Routes/Search/index.js":"10","/mnt/d/github/nomflix/src/Routes/TV/index.js":"11","/mnt/d/github/nomflix/src/Routes/Search/SearchContainer.js":"12","/mnt/d/github/nomflix/src/Routes/TV/TVContainer.js":"13","/mnt/d/github/nomflix/src/Routes/Search/SearchPresenter.js":"14","/mnt/d/github/nomflix/src/Routes/TV/TVPresenter.js":"15","/mnt/d/github/nomflix/src/Routes/Detail/index.js":"16","/mnt/d/github/nomflix/src/Routes/Detail/DetailContainer.js":"17","/mnt/d/github/nomflix/src/Routes/Detail/DetailPresenter.js":"18","/mnt/d/github/nomflix/src/Components/Section.js":"19","/mnt/d/github/nomflix/src/Components/Loader.js":"20","/mnt/d/github/nomflix/src/Components/Message.js":"21","/mnt/d/github/nomflix/src/Components/Poster.js":"22"},{"size":155,"mtime":1610512858729,"results":"23","hashOfConfig":"24"},{"size":286,"mtime":1610447407924,"results":"25","hashOfConfig":"24"},{"size":665,"mtime":1610702380065,"results":"26","hashOfConfig":"24"},{"size":1162,"mtime":1610449381918,"results":"27","hashOfConfig":"24"},{"size":569,"mtime":1610627729196,"results":"28","hashOfConfig":"24"},{"size":1006,"mtime":1610514746861,"results":"29","hashOfConfig":"24"},{"size":76,"mtime":1610515658534,"results":"30","hashOfConfig":"24"},{"size":1115,"mtime":1610607501040,"results":"31","hashOfConfig":"24"},{"size":2545,"mtime":1610688643225,"results":"32","hashOfConfig":"24"},{"size":82,"mtime":1610522279169,"results":"33","hashOfConfig":"24"},{"size":70,"mtime":1610521962552,"results":"34","hashOfConfig":"24"},{"size":1567,"mtime":1610606382527,"results":"35","hashOfConfig":"24"},{"size":1102,"mtime":1610606378507,"results":"36","hashOfConfig":"24"},{"size":2717,"mtime":1610688879695,"results":"37","hashOfConfig":"24"},{"size":2642,"mtime":1610688744443,"results":"38","hashOfConfig":"24"},{"size":82,"mtime":1610522497893,"results":"39","hashOfConfig":"24"},{"size":1421,"mtime":1610629434942,"results":"40","hashOfConfig":"24"},{"size":3631,"mtime":1610689185850,"results":"41","hashOfConfig":"24"},{"size":713,"mtime":1610601499500,"results":"42","hashOfConfig":"24"},{"size":339,"mtime":1610601008047,"results":"43","hashOfConfig":"24"},{"size":499,"mtime":1610607354931,"results":"44","hashOfConfig":"24"},{"size":1799,"mtime":1610628156620,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1abeux0",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/mnt/d/github/nomflix/src/index.js",[],["99","100"],"/mnt/d/github/nomflix/src/Components/App.js",[],"/mnt/d/github/nomflix/src/Components/Router.js",["101"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Header from \"Components/Header\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/tv\" component={TV} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/movie/:id\" component={Detail} />\n      <Route path=\"/show/:id\" component={Detail} />\n      <Redirect from=\"*\" to=\"/\" />\n    </Switch>\n  </Router>\n);\n","/mnt/d/github/nomflix/src/Components/Header.js",[],"/mnt/d/github/nomflix/src/Components/GlobalStyles.js",[],"/mnt/d/github/nomflix/src/api.js",[],"/mnt/d/github/nomflix/src/Routes/Home/index.js",[],"/mnt/d/github/nomflix/src/Routes/Home/HomeContainer.js",["102"],"import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { movieApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await movieApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await movieApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await movieApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/mnt/d/github/nomflix/src/Routes/Home/HomePresenter.js",[],"/mnt/d/github/nomflix/src/Routes/Search/index.js",[],"/mnt/d/github/nomflix/src/Routes/TV/index.js",[],"/mnt/d/github/nomflix/src/Routes/Search/SearchContainer.js",["103","104","105"],"import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResult: null,\n    tvResult: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({\n      loading: true,\n    });\n    try {\n      throw Error();\n      const {\n        data: { results: movieResult },\n      } = await movieApi.search(searchTerm);\n      const {\n        data: { results: tvResult },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResult,\n        tvResult,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find results.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      movieResult,\n      tvResult,\n      searchTerm,\n      error,\n      loading,\n      updateTerm,\n    } = this.state;\n    return (\n      <SearchPresenter\n        movieResult={movieResult}\n        tvResult={tvResult}\n        searchTerm={searchTerm}\n        error={error}\n        loading={loading}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","/mnt/d/github/nomflix/src/Routes/TV/TVContainer.js",["106"],"import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV informations.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","/mnt/d/github/nomflix/src/Routes/Search/SearchPresenter.js",["107"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { movieApi } from \"api\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResult,\n  tvResult,\n  searchTerm,\n  error,\n  loading,\n  handleSubmit,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResult && movieResult.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResult.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)} // substring 문자열 자르기\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResult && tvResult.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResult.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                } // substring 문자열 자르기\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResult &&\n          movieResult &&\n          tvResult.length === 0 &&\n          movieResult.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing found\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResult: PropTypes.array,\n  tvResult: PropTypes.array,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","/mnt/d/github/nomflix/src/Routes/TV/TVPresenter.js",[],"/mnt/d/github/nomflix/src/Routes/Detail/index.js",[],"/mnt/d/github/nomflix/src/Routes/Detail/DetailContainer.js",["108"],"import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { movieApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"), // Movie인지 확인\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    /* isMovie만 있어도 되는 이유 movie, tv만 인식하고 나머지는 Route에 없기 때문에\n    sdfsfs 이런 url은 home으로 redirect 될 거임. */\n    const { isMovie } = this.state;\n    /* id 처리 */\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\"); // id가 NaN이면 홈으로 감.\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await movieApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({\n        error: \"Can't find anything.\",\n      });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","/mnt/d/github/nomflix/src/Routes/Detail/DetailPresenter.js",[],"/mnt/d/github/nomflix/src/Components/Section.js",[],"/mnt/d/github/nomflix/src/Components/Loader.js",["109"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      🕑\n    </span>\n  </Container>\n);\n",["110","111"],"/mnt/d/github/nomflix/src/Components/Message.js",[],"/mnt/d/github/nomflix/src/Components/Poster.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":14,"column":1,"nodeType":"118","endLine":26,"endColumn":3},{"ruleId":"116","severity":1,"message":"119","line":5,"column":1,"nodeType":"118","endLine":53,"endColumn":2},{"ruleId":"116","severity":1,"message":"119","line":5,"column":1,"nodeType":"118","endLine":80,"endColumn":2},{"ruleId":"120","severity":1,"message":"121","line":38,"column":7,"nodeType":"122","messageId":"123","endLine":47,"endColumn":10},{"ruleId":"124","severity":1,"message":"125","line":66,"column":7,"nodeType":"126","messageId":"127","endLine":66,"endColumn":17},{"ruleId":"116","severity":1,"message":"119","line":5,"column":1,"nodeType":"118","endLine":54,"endColumn":2},{"ruleId":"124","severity":1,"message":"128","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":18},{"ruleId":"116","severity":1,"message":"119","line":5,"column":1,"nodeType":"118","endLine":54,"endColumn":2},{"ruleId":"116","severity":1,"message":"117","line":13,"column":1,"nodeType":"118","endLine":19,"endColumn":3},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","no-unused-vars","'updateTerm' is assigned a value but never used.","Identifier","unusedVar","'movieApi' is defined but never used.",["131"],["132"],"no-global-assign","no-unsafe-negation"]